name: New CI/CD Pipiline

env:
  JAVA_VERSION: '17'
  COMMON_STARTER_PATH: libs/common-starter
  BOOTSTAPPER_PATH: modules/bootstrapper
  JACOCO_UNIT_TEST_PATH: modules/bootstrapper/target/site/exec
  JACOCO_AGGREGATED_COVERAGE_PATH: modules/bootstrapper/target/site/jacoco
  JACOCO_UNIT_TEST_EXEC_NAME: jacoco-unit-tests.exec
  JACOCO_AGGREGATED_COVERAGE_XML_NAME: jacoco.xml

on:
  push:
    branches:
      - master

jobs:

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Unit Common Start Tests
        run: mvn -f ${{ env.COMMON_STARTER_PATH }}/pom.xml verify -Dskip.integration.tests=true

      - name: Run Unit Bootstrapper Tests
        run: mvn -f ${{ env.BOOTSTAPPER_PATH }}/pom.xml verify -Dskip.integration.tests=true

      - name: Upload Unit Tests Report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report
          path: ${{ env.JACOCO_UNIT_TEST_PATH }}/${{ env.JACOCO_UNIT_TEST_EXEC }}
          retention-days: 1

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Unit Tests Report
        uses: actions/download-artifact@v3
        with:
          name: unit-test-report
          path: ${{ env.JACOCO_UNIT_TEST_PATH }}

      - name: Run Integration Bootstrapper Tests
        run: mvn -f ${{ env.BOOTSTAPPER_PATH }}/pom.xml verify -Dskip.unit.tests=true

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Upload Test Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-report
          path: ${{ env.JACOCO_AGGREGATED_COVERAGE_PATH }}/${{ env.JACOCO_AGGREGATED_COVERAGE_XML_NAME }}
          retention-days: 1

  sonar:
    name: SonarCloud Checks
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Download Tests Coverage Report
        uses: actions/download-artifact@v2
        with:
          name: test-coverage-report
          path: ${{ env.BOOTSTAPPER_PATH }}

      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -f ${{ env.BOOTSTAPPER_PATH }}/pom.xml compile org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=vundr_chronos -Dsonar.coverage.jacoco.xmlReportPaths=${{ env.JACOCO_AGGREGATED_COVERAGE_XML_NAME }}